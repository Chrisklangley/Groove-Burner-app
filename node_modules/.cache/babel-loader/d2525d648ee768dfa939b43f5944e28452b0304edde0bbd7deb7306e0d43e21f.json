{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlangley/react-projects/Specs-Capstone/client/src/components/CreateCover.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport zlib from \"zlib\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateCover() {\n  _s();\n  const [fileInputState, setFileInputChange] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n  const handleSubmitFile = async e => {\n    e.preventDefault();\n    if (!previewSource) return;\n\n    // Compress the data using gzip\n    const compressedData = zlib.gzipSync(JSON.stringify({\n      data: previewSource,\n      title: title\n    }));\n    try {\n      // Make the Axios request with the compressed data\n      const response = await axios.post(\"/api/endpoint\", compressedData, {\n        headers: {\n          \"Content-Encoding\": \"gzip\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitFile,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"albumName\",\n        id: \"\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: handleFileInputChange,\n        value: fileInputState,\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cover-submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), previewSource && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewSource,\n      alt: \"\",\n      style: {\n        height: \"300px\",\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateCover, \"EyUWE3oMZ6A1MKU1IWiVE23v8l8=\");\n_c = CreateCover;\nexport default CreateCover;\nvar _c;\n$RefreshReg$(_c, \"CreateCover\");","map":{"version":3,"names":["React","useState","axios","zlib","jsxDEV","_jsxDEV","CreateCover","_s","fileInputState","setFileInputChange","selectedFile","setSelectedFile","previewSource","setPreviewSource","title","setTitle","handleFileInputChange","e","file","target","files","previewFile","reader","FileReader","readAsDataURL","onloadend","result","handleSubmitFile","preventDefault","compressedData","gzipSync","JSON","stringify","data","response","post","headers","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","id","value","onChange","className","src","alt","style","height","width","_c","$RefreshReg$"],"sources":["/Users/christopherlangley/react-projects/Specs-Capstone/client/src/components/CreateCover.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport zlib from \"zlib\";\n\nfunction CreateCover() {\n  const [fileInputState, setFileInputChange] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n\n  const handleFileInputChange = (e) => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const handleSubmitFile = async (e) => {\n    e.preventDefault();\n    if (!previewSource) return;\n\n    // Compress the data using gzip\n    const compressedData = zlib.gzipSync(\n      JSON.stringify({ data: previewSource, title: title })\n    );\n\n    try {\n      // Make the Axios request with the compressed data\n      const response = await axios.post(\"/api/endpoint\", compressedData, {\n        headers: {\n          \"Content-Encoding\": \"gzip\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Upload</h1>\n      <form onSubmit={handleSubmitFile}>\n        <input\n          type=\"text\"\n          name=\"albumName\"\n          id=\"\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <input\n          type=\"file\"\n          name=\"image\"\n          onChange={handleFileInputChange}\n          value={fileInputState}\n          className=\"form-input\"\n        />\n        <button className=\"cover-submit\">submit</button>\n      </form>\n      {previewSource && (\n        <img\n          src={previewSource}\n          alt=\"\"\n          style={{ height: \"300px\", width: \"300px\" }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default CreateCover;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}