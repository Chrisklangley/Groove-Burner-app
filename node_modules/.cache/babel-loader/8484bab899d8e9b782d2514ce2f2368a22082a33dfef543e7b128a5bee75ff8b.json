{"ast":null,"code":"import _regeneratorRuntime from\"/Users/christopherlangley/react-projects/Specs-Capstone/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/christopherlangley/react-projects/Specs-Capstone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/christopherlangley/react-projects/Specs-Capstone/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import axios from\"axios\";import Cookies from\"js-cookie\";import{useNavigate}from\"react-router-dom\";import\"./CreateCover.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CreateCover(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),fileInputState=_useState2[0],setFileInputChange=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),previewSource=_useState4[0],setPreviewSource=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),title=_useState6[0],setTitle=_useState6[1];var navigate=useNavigate();var authState=Cookies.get(\"_auth_state\");var email=JSON.parse(authState).email;var handleFileInputChange=function handleFileInputChange(e){var file=e.target.files[0];previewFile(file);};var previewFile=function previewFile(file){var reader=new FileReader();reader.readAsDataURL(file);reader.onloadend=function(){setPreviewSource(reader.result);};};var handleSubmitFile=function handleSubmitFile(e){e.preventDefault();if(!previewFile)return;uploadImage(previewSource);};var uploadImage=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(base64EncodedImage){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"http://localhost:4838/addCover/Title/\".concat(title,\"/\").concat(email),{method:\"POST\",body:JSON.stringify({data:base64EncodedImage}),headers:{\"Content-type\":\"application/json\"}});case 3:response=_context.sent;navigate(\"/finalCover\");console.log(response);_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function uploadImage(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"cover-main\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"cover-title\",children:\"Name your groovelist and upload your cover art\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmitFile,className:\"cover-form\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"cover-input\",type:\"text\",name:\"albumName\",id:\"\",value:title,onChange:function onChange(e){return setTitle(e.target.value);}}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"image\",title:\"somedmd\",onChange:handleFileInputChange,value:fileInputState,className:\"form-input\"}),/*#__PURE__*/_jsx(\"button\",{className:\"cover-submit\",children:\"add cover art\"})]})]}),previewSource&&/*#__PURE__*/_jsx(\"img\",{src:previewSource,alt:\"\",style:{height:\"275px\",width:\"275px\",borderRadius:\"6px\",marginTop:\"5px\",marginRight:\"10px\"}})]});}export default CreateCover;","map":{"version":3,"names":["React","useState","axios","Cookies","useNavigate","jsx","_jsx","jsxs","_jsxs","CreateCover","_useState","_useState2","_slicedToArray","fileInputState","setFileInputChange","_useState3","_useState4","previewSource","setPreviewSource","_useState5","_useState6","title","setTitle","navigate","authState","get","email","JSON","parse","handleFileInputChange","e","file","target","files","previewFile","reader","FileReader","readAsDataURL","onloadend","result","handleSubmitFile","preventDefault","uploadImage","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","base64EncodedImage","response","wrap","_callee$","_context","prev","next","fetch","concat","method","body","stringify","data","headers","sent","console","log","t0","error","stop","_x","apply","arguments","className","children","onSubmit","type","name","id","value","onChange","src","alt","style","height","width","borderRadius","marginTop","marginRight"],"sources":["/Users/christopherlangley/react-projects/Specs-Capstone/src/components/CreateCover.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./CreateCover.css\";\n\nfunction CreateCover() {\n  const [fileInputState, setFileInputChange] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n\n  let authState = Cookies.get(\"_auth_state\");\n  let email = JSON.parse(authState).email;\n\n  const handleFileInputChange = (e) => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n  const handleSubmitFile = (e) => {\n    e.preventDefault();\n    if (!previewFile) return;\n    uploadImage(previewSource);\n  };\n\n  const uploadImage = async (base64EncodedImage) => {\n    try {\n      const response = await fetch(\n        `http://localhost:4838/addCover/Title/${title}/${email}`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({ data: base64EncodedImage }),\n          headers: { \"Content-type\": \"application/json\" },\n        }\n      );\n      navigate(\"/finalCover\");\n      console.log(response);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"cover-main\">\n      <h1 className=\"cover-title\">\n        Name your groovelist and upload your cover art\n      </h1>\n      <form onSubmit={handleSubmitFile} className=\"cover-form\">\n        <input\n          className=\"cover-input\"\n          type=\"text\"\n          name=\"albumName\"\n          id=\"\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <div>\n          <input\n            type=\"file\"\n            name=\"image\"\n            title=\"somedmd\"\n            onChange={handleFileInputChange}\n            value={fileInputState}\n            className=\"form-input\"\n          />\n          <button className=\"cover-submit\">add cover art</button>\n        </div>\n      </form>\n      {previewSource && (\n        <img\n          src={previewSource}\n          alt=\"\"\n          style={{\n            height: \"275px\",\n            width: \"275px\",\n            borderRadius: \"6px\",\n            marginTop: \"5px\",\n            marginRight: \"10px\",\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default CreateCover;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}