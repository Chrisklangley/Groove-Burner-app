{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlangley/react-projects/Specs-Capstone/client/src/components/CreateCover.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateCover() {\n  _s();\n  const [fileInputState, setFileInputChange] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n  const handleSubmitFile = e => {\n    e.preventDefault();\n    if (!previewFile) return;\n    uploadImage(previewSource);\n  };\n  const uploadImage = async base64EncodedImage => {\n    try {\n      await axios.post(\"/addCover/Title\", body, {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    }\n    // try {\n    //   await fetch(\"/addCover/Title\", {\n    //     method: \"POST\",\n    //     body: JSON.stringify({ data: base64EncodedImage }),\n    //     headers: { \"Content-type\": \"application/json\" },\n    //   });\n    // } catch (error) {\n    //   console.error(error);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitFile,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"albumName\",\n        id: \"\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: handleFileInputChange,\n        value: fileInputState,\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cover-submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), previewSource && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewSource,\n      alt: \"\",\n      style: {\n        height: \"300px\",\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateCover, \"mZEGM81lk3IBu1trmuBmiPexpYo=\");\n_c = CreateCover;\nexport default CreateCover;\nvar _c;\n$RefreshReg$(_c, \"CreateCover\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CreateCover","_s","fileInputState","setFileInputChange","previewSource","setPreviewSource","title","setTitle","handleFileInputChange","e","file","target","files","previewFile","reader","FileReader","readAsDataURL","onloadend","result","handleSubmitFile","preventDefault","uploadImage","base64EncodedImage","post","body","headers","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","id","value","onChange","className","src","alt","style","height","width","_c","$RefreshReg$"],"sources":["/Users/christopherlangley/react-projects/Specs-Capstone/client/src/components/CreateCover.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nfunction CreateCover() {\n  const [fileInputState, setFileInputChange] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const handleFileInputChange = (e) => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n  const handleSubmitFile = (e) => {\n    e.preventDefault();\n    if (!previewFile) return;\n    uploadImage(previewSource);\n  };\n\n  const uploadImage = async (base64EncodedImage) => {\n    try {\n      await axios.post(\"/addCover/Title\", body, {\n        headers: { \"Content-type\": \"application/json\" },\n      });\n    } catch (error) {\n      console.error(error);\n    }\n    // try {\n    //   await fetch(\"/addCover/Title\", {\n    //     method: \"POST\",\n    //     body: JSON.stringify({ data: base64EncodedImage }),\n    //     headers: { \"Content-type\": \"application/json\" },\n    //   });\n    // } catch (error) {\n    //   console.error(error);\n    // }\n  };\n  return (\n    <div>\n      <h1>Upload</h1>\n      <form onSubmit={handleSubmitFile}>\n        <input\n          type=\"text\"\n          name=\"albumName\"\n          id=\"\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <input\n          type=\"file\"\n          name=\"image\"\n          onChange={handleFileInputChange}\n          value={fileInputState}\n          className=\"form-input\"\n        />\n        <button className=\"cover-submit\">submit</button>\n      </form>\n      {previewSource && (\n        <img\n          src={previewSource}\n          alt=\"\"\n          style={{ height: \"300px\", width: \"300px\" }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default CreateCover;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}