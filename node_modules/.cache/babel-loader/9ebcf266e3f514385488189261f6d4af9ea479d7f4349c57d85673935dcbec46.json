{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlangley/react-projects/Specs-Capstone/client/src/components/CreateCover.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./CreateCover.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateCover() {\n  _s();\n  const [fileInputState, setFileInputChange] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n  let authState = Cookies.get(\"_auth_state\");\n  let email = JSON.parse(authState).email;\n  const handleFileInputChange = e => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n  const previewFile = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n  const handleSubmitFile = e => {\n    e.preventDefault();\n    if (!previewFile) return;\n    uploadImage(previewSource);\n  };\n  const uploadImage = async base64EncodedImage => {\n    try {\n      const response = await fetch(`http://localhost:4838/addCover/Title/${title}/${email}`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          data: base64EncodedImage\n        }),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n      console.log(response);\n      navigate(\"/finalCover\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cover-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"cover-title\",\n      children: \"Name your groovelist and upload your cover art\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmitFile,\n      className: \"cover-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"cover-input\",\n        type: \"text\",\n        name: \"albumName\",\n        id: \"\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          onChange: handleFileInputChange,\n          value: fileInputState,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cover-submit\",\n          children: \"add cover art\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), previewSource && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: previewSource,\n      alt: \"\",\n      style: {\n        height: \"275px\",\n        width: \"275px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateCover, \"OTFVIJbHUQOwbbvq18JmygOjL0E=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateCover;\nexport default CreateCover;\nvar _c;\n$RefreshReg$(_c, \"CreateCover\");","map":{"version":3,"names":["React","useState","axios","Cookies","useNavigate","jsxDEV","_jsxDEV","CreateCover","_s","fileInputState","setFileInputChange","previewSource","setPreviewSource","title","setTitle","navigate","authState","get","email","JSON","parse","handleFileInputChange","e","file","target","files","previewFile","reader","FileReader","readAsDataURL","onloadend","result","handleSubmitFile","preventDefault","uploadImage","base64EncodedImage","response","fetch","method","body","stringify","data","headers","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","id","value","onChange","src","alt","style","height","width","_c","$RefreshReg$"],"sources":["/Users/christopherlangley/react-projects/Specs-Capstone/client/src/components/CreateCover.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./CreateCover.css\";\n\nfunction CreateCover() {\n  const [fileInputState, setFileInputChange] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n\n  let authState = Cookies.get(\"_auth_state\");\n  let email = JSON.parse(authState).email;\n\n  const handleFileInputChange = (e) => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n  const handleSubmitFile = (e) => {\n    e.preventDefault();\n    if (!previewFile) return;\n    uploadImage(previewSource);\n  };\n\n  const uploadImage = async (base64EncodedImage) => {\n    try {\n      const response = await fetch(\n        `http://localhost:4838/addCover/Title/${title}/${email}`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({ data: base64EncodedImage }),\n          headers: { \"Content-type\": \"application/json\" },\n        }\n      );\n      console.log(response);\n      navigate(\"/finalCover\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"cover-main\">\n      <h1 className=\"cover-title\">\n        Name your groovelist and upload your cover art\n      </h1>\n      <form onSubmit={handleSubmitFile} className=\"cover-form\">\n        <input\n          className=\"cover-input\"\n          type=\"text\"\n          name=\"albumName\"\n          id=\"\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <div>\n          <input\n            type=\"file\"\n            name=\"image\"\n            onChange={handleFileInputChange}\n            value={fileInputState}\n            className=\"form-input\"\n          />\n          <button className=\"cover-submit\">add cover art</button>\n        </div>\n      </form>\n      {previewSource && (\n        <img\n          src={previewSource}\n          alt=\"\"\n          style={{ height: \"275px\", width: \"275px\" }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default CreateCover;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}