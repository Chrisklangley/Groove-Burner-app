{"ast":null,"code":"var _jsxFileName = \"/Users/christopherlangley/react-projects/Specs-Capstone/client/src/components/Groovelist.js\";\nimport React, { useState } from \"react\";\nimport \"./Groovelist.css\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Groovelist(_ref) {\n  let {\n    songs\n  } = _ref;\n  // const [songList, setSongList] = useState(songs);\n  let groovelistCount = 1;\n  let authState = Cookies.get(\"_auth_state\");\n  let newState = JSON.parse(authState);\n  console.log(songs);\n  function deleteSong(index) {\n    const newSongs = [...songs]; // create a copy of the songs array\n    newSongs.splice(index, 1); // remove the song at the specified index\n    setSongs(newSongs); // update the state with the new songs array\n  }\n\n  const results = songs.map((song, i) => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [groovelistCount++, \". \", song, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteSong(i),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grovelist-main\",\n    children: songs.length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"groovelist-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [newState.name, \"'s Groovelist\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: deleteSong,\n        children: results\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = Groovelist;\nexport default Groovelist;\nvar _c;\n$RefreshReg$(_c, \"Groovelist\");","map":{"version":3,"names":["React","useState","Cookies","jsxDEV","_jsxDEV","Groovelist","_ref","songs","groovelistCount","authState","get","newState","JSON","parse","console","log","deleteSong","index","newSongs","splice","setSongs","results","map","song","i","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","length","name","_c","$RefreshReg$"],"sources":["/Users/christopherlangley/react-projects/Specs-Capstone/client/src/components/Groovelist.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Groovelist.css\";\nimport Cookies from \"js-cookie\";\n\nfunction Groovelist({ songs }) {\n  // const [songList, setSongList] = useState(songs);\n  let groovelistCount = 1;\n  let authState = Cookies.get(\"_auth_state\");\n  let newState = JSON.parse(authState);\n  console.log(songs);\n\n  function deleteSong(index) {\n    const newSongs = [...songs]; // create a copy of the songs array\n    newSongs.splice(index, 1); // remove the song at the specified index\n    setSongs(newSongs); // update the state with the new songs array\n  }\n\n  const results = songs.map((song, i) => {\n    return (\n      <p key={i}>\n        {groovelistCount++}. {song}\n        <button onClick={() => deleteSong(i)}>X</button>\n      </p>\n    );\n  });\n\n  return (\n    <div className=\"grovelist-main\">\n      {songs.length !== 0 ? (\n        <div className=\"groovelist-container\">\n          <div>\n            <h3>{newState.name}'s Groovelist</h3>\n          </div>\n          <div onClick={deleteSong}>{results}</div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Groovelist;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,UAAUA,CAAAC,IAAA,EAAY;EAAA,IAAX;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAC3B;EACA,IAAIE,eAAe,GAAG,CAAC;EACvB,IAAIC,SAAS,GAAGP,OAAO,CAACQ,GAAG,CAAC,aAAa,CAAC;EAC1C,IAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC;EACpCK,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;EAElB,SAASS,UAAUA,CAACC,KAAK,EAAE;IACzB,MAAMC,QAAQ,GAAG,CAAC,GAAGX,KAAK,CAAC,CAAC,CAAC;IAC7BW,QAAQ,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3BG,QAAQ,CAACF,QAAQ,CAAC,CAAC,CAAC;EACtB;;EAEA,MAAMG,OAAO,GAAGd,KAAK,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;IACrC,oBACEpB,OAAA;MAAAqB,QAAA,GACGjB,eAAe,EAAE,EAAC,IAAE,EAACe,IAAI,eAC1BnB,OAAA;QAAQsB,OAAO,EAAEA,CAAA,KAAMV,UAAU,CAACQ,CAAC,CAAE;QAAAC,QAAA,EAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA,GAF1CN,CAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGL;EAER,CAAC,CAAC;EAEF,oBACE1B,OAAA;IAAK2B,SAAS,EAAC,gBAAgB;IAAAN,QAAA,EAC5BlB,KAAK,CAACyB,MAAM,KAAK,CAAC,gBACjB5B,OAAA;MAAK2B,SAAS,EAAC,sBAAsB;MAAAN,QAAA,gBACnCrB,OAAA;QAAAqB,QAAA,eACErB,OAAA;UAAAqB,QAAA,GAAKd,QAAQ,CAACsB,IAAI,EAAC,eAAa;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjC,eACN1B,OAAA;QAAKsB,OAAO,EAAEV,UAAW;QAAAS,QAAA,EAAEJ;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrC,GACJ;EAAI;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV;AAACI,EAAA,GAlCQ7B,UAAU;AAoCnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}