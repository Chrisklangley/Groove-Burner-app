[{"/Users/christopherlangley/react-projects/Specs-Capstone/src/index.js":"1","/Users/christopherlangley/react-projects/Specs-Capstone/src/App.js":"2","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/Homepage.js":"3","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/Register.js":"4","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/CreateOrder.js":"5","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/CreateCover.js":"6","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/DisplayFinalCover.js":"7","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/SearchBar.js":"8","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/NavBar.js":"9","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/Groovelist.js":"10","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/PlaylistCard.js":"11","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/SongResults.js":"12"},{"size":659,"mtime":1687384966428,"results":"13","hashOfConfig":"14"},{"size":1004,"mtime":1687391822345,"results":"15","hashOfConfig":"14"},{"size":2213,"mtime":1687384966425,"results":"16","hashOfConfig":"14"},{"size":2971,"mtime":1687384966426,"results":"17","hashOfConfig":"14"},{"size":138,"mtime":1687384966424,"results":"18","hashOfConfig":"14"},{"size":2453,"mtime":1687384966423,"results":"19","hashOfConfig":"14"},{"size":1992,"mtime":1687384966424,"results":"20","hashOfConfig":"14"},{"size":2433,"mtime":1687384966427,"results":"21","hashOfConfig":"14"},{"size":587,"mtime":1687384966425,"results":"22","hashOfConfig":"14"},{"size":2625,"mtime":1687384966425,"results":"23","hashOfConfig":"14"},{"size":858,"mtime":1687384966426,"results":"24","hashOfConfig":"14"},{"size":1122,"mtime":1687384966428,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bd5s4b",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},"/Users/christopherlangley/react-projects/Specs-Capstone/src/index.js",[],[],"/Users/christopherlangley/react-projects/Specs-Capstone/src/App.js",["70","71"],[],"/Users/christopherlangley/react-projects/Specs-Capstone/src/components/Homepage.js",["72"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./Homepage.css\";\nimport PlaylistCard from \"./PlaylistCard\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\n\nfunction Homepage() {\n  const [playlistData, setPlaylistData] = useState([]);\n  const [genre, setGenre] = useState(\"vibes\");\n\n  const options = {\n    method: \"GET\",\n    url: \"https://spotify23.p.rapidapi.com/search/\",\n    params: {\n      q: genre,\n      type: \"playlists\",\n      offset: \"0\",\n      limit: \"20\",\n      numberOfTopResults: \"5\",\n    },\n    headers: {\n      \"X-RapidAPI-Key\": \"74233648d1msha948e959543800ep130f18jsn35b79b171aee\",\n      \"X-RapidAPI-Host\": \"spotify23.p.rapidapi.com\",\n    },\n  };\n\n  let authState = Cookies.get(\"_auth_state\");\n  const { name } = JSON.parse(authState) || {};\n  const greeting = name ? `Hello, ${name}!` : \"Hello!\";\n\n  const getPlaylist = async () => {\n    try {\n      const response = await axios(options);\n      setPlaylistData(response.data.playlists.items);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getPlaylist();\n  }, [genre]);\n\n  return (\n    <div className=\"homepage\">\n      <h1 className=\"home-title\">\n        {greeting} before we get a groove on let's try to find your vibe from\n        one of these awesome curated playlists\n      </h1>\n      <h2 className=\"subtitle\">\n        Once you're ready, click \"Start a Groovelist\"\n      </h2>\n      <div className=\"genre-change\">\n        <h4>Change the vibe</h4>\n        <select name=\"genre\" id=\"\" onChange={(e) => setGenre(e.target.value)}>\n          <option value=\"pop\">Pop</option>\n          <option value=\"Hip hop\">Hip-Hop</option>\n          <option value=\"R&B/soul\">R&B/soul</option>\n          <option value=\"Electronic/dance\">Electronic/dance</option>\n          <option value=\"Jazz\">Jazz</option>\n          <option value=\"Classical\">Classical</option>\n        </select>\n      </div>\n\n      <div className=\"glist-container\">\n        <div className=\"glist\">\n          {playlistData.map((playlist, i) => (\n            <div key={i}>\n              <PlaylistCard playlistData={playlist} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Homepage;\n","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/Register.js",["73","74"],[],"import React, { useState } from \"react\";\nimport { useSignIn, useIsAuthenticated } from \"react-auth-kit\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Register.css\";\nimport axios from \"axios\";\n\nfunction Register() {\n  const [triggerSignup, setTriggerSignup] = useState(true);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const signIn = useSignIn();\n  const navigate = useNavigate();\n  const isAuthenticated = useIsAuthenticated();\n  const [errorMessage, setErrorMessage] = useState(true);\n\n  const validateForm = () => {\n    if (\n      username.trim() === \"\" ||\n      email.trim() === \"\" ||\n      password.trim() === \"\"\n    ) {\n      alert(\"Please fill in all fields\");\n      return false;\n    }\n\n    if (!email.includes(\"@\")) {\n      alert(\"Please enter a valid email address\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n\n    const body = {\n      username,\n      email,\n      password,\n    };\n    const URL = \"http://localhost:4838\";\n\n    axios\n      .post(triggerSignup ? `${URL}/login` : `${URL}/register`, body)\n      .then((res) => {\n        console.log(res.data);\n\n        signIn({\n          token: res.data.token,\n          expiresIn: 3600,\n          tokenType: \"Bearer\",\n          authState: {\n            email: res.data.email,\n            name: res.data.username,\n          },\n        });\n      })\n      .then(() => {\n        setTimeout(() => {\n          navigate(\"/home\");\n        }, 2000);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className=\"main-form-containter\">\n      <h1>\n        \"Find your rhythm <br /> with Groove Burner\"\n      </h1>\n      <div className=\"form-containter\">\n        <form action=\"\" className=\"form\" onSubmit={submitHandler}>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            onChange={(e) => setUsername(e.target.value)}\n            value={username}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Email\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n          />\n          <button className=\"login-btn\">\n            {triggerSignup ? `login` : \"register\"}\n          </button>\n        </form>\n        <button\n          className=\"signin-btn\"\n          onClick={() => setTriggerSignup(!triggerSignup)}\n        >\n          {!triggerSignup ? \"need to login?\" : \"need to register?\"}\n          {errorMessage ? null : (\n            <p className=\"error-message\">User not authenticated</p>\n          )}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;\n","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/CreateOrder.js",[],[],"/Users/christopherlangley/react-projects/Specs-Capstone/src/components/CreateCover.js",["75","76"],[],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./CreateCover.css\";\n\nfunction CreateCover() {\n  const [fileInputState, setFileInputChange] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const navigate = useNavigate();\n\n  let authState = Cookies.get(\"_auth_state\");\n  let email = JSON.parse(authState).email;\n\n  const handleFileInputChange = (e) => {\n    const file = e.target.files[0];\n    previewFile(file);\n  };\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n  const handleSubmitFile = (e) => {\n    e.preventDefault();\n    if (!previewFile) return;\n    uploadImage(previewSource);\n  };\n\n  const uploadImage = async (base64EncodedImage) => {\n    try {\n      const response = await fetch(\n        `http://localhost:4838/addCover/Title/${title}/${email}`,\n        {\n          method: \"POST\",\n          body: JSON.stringify({ data: base64EncodedImage }),\n          headers: { \"Content-type\": \"application/json\" },\n        }\n      );\n      navigate(\"/finalCover\");\n      console.log(response);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"cover-main\">\n      <h1 className=\"cover-title\">\n        Name your groovelist and upload your cover art\n      </h1>\n      <form onSubmit={handleSubmitFile} className=\"cover-form\">\n        <input\n          className=\"cover-input\"\n          type=\"text\"\n          name=\"albumName\"\n          id=\"\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <div>\n          <input\n            type=\"file\"\n            name=\"image\"\n            title=\"somedmd\"\n            onChange={handleFileInputChange}\n            value={fileInputState}\n            className=\"form-input\"\n          />\n          <button className=\"cover-submit\">add cover art</button>\n        </div>\n      </form>\n      {previewSource && (\n        <img\n          src={previewSource}\n          alt=\"\"\n          style={{\n            height: \"275px\",\n            width: \"275px\",\n            borderRadius: \"6px\",\n            marginTop: \"5px\",\n            marginRight: \"10px\",\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default CreateCover;\n","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/DisplayFinalCover.js",["77","78"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./FinalCover.css\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport { useSignOut } from \"react-auth-kit\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction DisplayFinalCover() {\n  const [coverArt, setCoverArt] = useState([]);\n  const [trackList, setTrackList] = useState([]);\n  let [groovelistCount, setgroovelistCount] = useState(1);\n  const signOut = useSignOut();\n  const navigate = useNavigate();\n\n  const logOut = () => {\n    signOut();\n    navigate(\"/\");\n  };\n\n  let authState = Cookies.get(\"_auth_state\");\n  let email = JSON.parse(authState).email;\n  const getCoverPlusTitle = () => {\n    axios\n      .get(`http://localhost:4838/getCover/${email}`)\n      .then((res) => {\n        setCoverArt(res.data);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const getTrackList = () => {\n    axios\n      .get(`http://localhost:4838/getTrackList/${email}`)\n      .then((res) => {\n        console.log(res.data);\n        setTrackList(res.data);\n        console.log(trackList);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  useEffect(() => {\n    getCoverPlusTitle();\n    getTrackList();\n  }, []);\n\n  const results = trackList.map((track) => {\n    return (\n      <div key={track.groovelist_id}>\n        <p className=\"final-songs\">\n          {\" \"}\n          {groovelistCount++} {track.groovelist_song}\n        </p>\n      </div>\n    );\n  });\n\n  return (\n    <div>\n      <h1 className=\"final-title\">Here is your Groovelist!</h1>\n      <div className=\"your-grooveList\">\n        <div className=\"your-cover\">\n          <img src={coverArt.groovelist_img} alt=\"\" />\n          <h3>{coverArt.groovelist_title}</h3>\n        </div>\n        <div className=\"your-tracklist\">\n          <h3>Track List</h3>\n          {results}\n        </div>\n      </div>\n      <div className=\"logOut\">\n        <button onClick={logOut}>log out</button>\n      </div>\n    </div>\n  );\n}\n\nexport default DisplayFinalCover;\n","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/SearchBar.js",["79"],[],"import React, { useState, useEffect, useRef } from \"react\";\nimport \"./SearchBar.css\";\nimport Groovelist from \"./Groovelist\";\nimport axios from \"axios\";\nimport { useAuthUser } from \"react-auth-kit\";\nimport SongResults from \"./SongResults\";\n\nfunction SearchBar() {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchDropdown, setSearchDropdown] = useState(true);\n  const [selectedSongs, setSelectedSongs] = useState([]);\n\n  const options = {\n    method: \"GET\",\n    url: \"https://spotify23.p.rapidapi.com/search/\",\n    params: {\n      q: searchInput,\n      type: \"tracks\",\n      offset: \"0\",\n      limit: \"10\",\n      numberOfTopResults: \"5\",\n    },\n    headers: {\n      \"X-RapidAPI-Key\": \"74233648d1msha948e959543800ep130f18jsn35b79b171aee\",\n      \"X-RapidAPI-Host\": \"spotify23.p.rapidapi.com\",\n    },\n  };\n\n  const submitSearchHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await axios.request(options);\n      setSearchResults(res.data.tracks.items);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  let dropDown = useRef();\n  useEffect(() => {\n    const close = (e) => {\n      if (dropDown.current && !dropDown.current.contains(e.target)) {\n        setSearchDropdown(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", close);\n  });\n\n  return (\n    <div>\n      <h2 className=\"title-search\">\n        Search a Song then click it add to your Groovelist\n      </h2>\n      <form className=\"searchbar-container\" onSubmit={submitSearchHandler}>\n        <div className=\"search-bar\">\n          <input\n            ref={dropDown}\n            onClick={() => setSearchDropdown(true)}\n            type=\"text\"\n            placeholder=\"Search a tune...\"\n            value={searchInput}\n            onChange={(e) => setSearchInput(e.target.value)}\n          />\n          <button\n            onClick={() => setSearchDropdown(true)}\n            className=\"search-btn\"\n          >\n            Search\n          </button>\n        </div>\n      </form>\n      {searchDropdown && searchResults.length > 2 ? (\n        <div className=\"result-container\" ref={dropDown}>\n          {searchResults.map((songs, i) => {\n            return <SongResults songs={songs} setSelected={setSelectedSongs} />;\n          })}\n        </div>\n      ) : null}\n      <Groovelist songs={selectedSongs} />\n    </div>\n  );\n}\n\nexport default SearchBar;\n","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/NavBar.js",[],[],"/Users/christopherlangley/react-projects/Specs-Capstone/src/components/Groovelist.js",["80","81"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./Groovelist.css\";\nimport Cookies from \"js-cookie\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Groovelist({ songs }) {\n  const [songList, setSongList] = useState([]);\n  const [total, setTotal] = useState(null);\n  const navigate = useNavigate();\n\n  let authStateName = Cookies.get(\"_auth_state\");\n  const userName = JSON.parse(authStateName).name;\n\n  let authState = Cookies.get(\"_auth_state\");\n  let email = JSON.parse(authState).email;\n  const body = {\n    email,\n  };\n\n  const getTotal = () => {\n    axios\n      .get(`http://localhost:4838/getTotal/${email}`)\n      .then((res) => {\n        setTotal(res.data.sum);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  useEffect(() => {\n    getTrackList();\n    axios\n      .get(`http://localhost:4838/getTotal/${email}`)\n      .then((res) => {\n        setTotal(res.data.sum);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }, [songList]);\n\n  useEffect(() => {\n    axios\n      .post(\"http://localhost:4838/getSongs\", body)\n      .then((res) => {\n        setSongList(res.data);\n      })\n      .catch((err) => console.error(err));\n  }, [songs]);\n\n  const getTrackList = () => {\n    axios\n      .get(`http://localhost:4838/getTrackList/${email}`)\n      .then((res) => {\n        console.log(res.data);\n        setSongList(res.data);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const deleteSong = (e) => {\n    const songId = e.target.parentElement.dataset.id;\n\n    axios\n      .delete(`http://localhost:4838/deleteSong/${songId}/${email}`)\n      .then((res) => {\n        setSongList(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const results = songList.map((song) => {\n    return (\n      <p key={song.groovelist_id} data-id={song.groovelist_id}>\n        {song.groovelist_song}\n        <button onClick={deleteSong}>X</button>\n      </p>\n    );\n  });\n\n  return (\n    <div className=\"grovelist-main\">\n      {songList.length !== 0 ? (\n        <div className=\"groovelist-container\">\n          <div className=\"heading\">\n            <h3>{userName}'s Groovelist </h3>\n            <div className=\"total-submit\">\n              <h5 className=\"est-total\" onClick={getTotal}>\n                EST total:$ {total}\n              </h5>\n              <button onClick={() => navigate(\"/createCover\")}>\n                add songs\n              </button>\n            </div>\n          </div>\n\n          {results}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Groovelist;\n","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/PlaylistCard.js",["82","83"],[],"import React from \"react\";\nimport \"./PlaylistCard.css\";\nimport { useNavigate } from \"react-router-dom\";\nfunction PlaylistCard({ playlistData }) {\n  const navigate = useNavigate();\n  console.log(playlistData);\n  const uri = playlistData.data.uri;\n  const uriParts = uri.split(\":\");\n  const type = uriParts[1];\n  const id = uriParts[2];\n  const url = `https://open.spotify.com/${type}/${encodeURIComponent(id)}`;\n\n  return (\n    <a href={url} target=\"_blank\">\n      <div className=\"playlist-card\">\n        <img\n          src={playlistData.data.images.items[0].sources[0].url}\n          alt=\"\"\n          className=\"playlist-img\"\n        />\n        <div className=\"playlist-content\">\n          <h3>{playlistData.data.name}</h3>\n          <p>Created by: {playlistData.data.owner.name}</p>\n        </div>\n      </div>\n    </a>\n  );\n}\n\nexport default PlaylistCard;\n","/Users/christopherlangley/react-projects/Specs-Capstone/src/components/SongResults.js",["84"],[],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./SongResults.css\";\nimport Cookies from \"js-cookie\";\n\nfunction SongResults({ songs, setSelected }) {\n  let authState = Cookies.get(\"_auth_state\");\n  const newState = JSON.parse(authState);\n\n  const email = newState.email;\n\n  const clickedSearch = (e) => {\n    console.log(e.currentTarget);\n\n    let clicked = e.currentTarget.innerText;\n    clicked = clicked.replace(\"\\n\", \" \").replace(\"\\n\\n+\", \"\");\n    setSelected(clicked);\n\n    const body = {\n      clicked,\n      email,\n    };\n\n    axios\n      .post(\"http://localhost:4838/addSong\", body)\n      .then((res) => console.log(res))\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"result-content\" onClick={clickedSearch}>\n      <p>\n        {songs.data.name} <br />\n        Artist: {songs.data.artists.items[0].profile.name}\n      </p>\n      <img\n        src={songs.data.albumOfTrack.coverArt.sources[0].url}\n        alt=\"\"\n        className=\"Search-cover-art\"\n      />\n      <button className=\"add-search-btn\">+</button>\n    </div>\n  );\n}\n\nexport default SongResults;\n",{"ruleId":"85","severity":1,"message":"86","line":2,"column":17,"nodeType":"87","messageId":"88","endLine":2,"endColumn":26},{"ruleId":"85","severity":1,"message":"89","line":2,"column":28,"nodeType":"87","messageId":"88","endLine":2,"endColumn":36},{"ruleId":"90","severity":1,"message":"91","line":42,"column":6,"nodeType":"92","endLine":42,"endColumn":13,"suggestions":"93"},{"ruleId":"85","severity":1,"message":"94","line":14,"column":9,"nodeType":"87","messageId":"88","endLine":14,"endColumn":24},{"ruleId":"85","severity":1,"message":"95","line":15,"column":24,"nodeType":"87","messageId":"88","endLine":15,"endColumn":39},{"ruleId":"85","severity":1,"message":"96","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":13},{"ruleId":"85","severity":1,"message":"97","line":8,"column":26,"nodeType":"87","messageId":"88","endLine":8,"endColumn":44},{"ruleId":"85","severity":1,"message":"98","line":11,"column":25,"nodeType":"87","messageId":"88","endLine":11,"endColumn":43},{"ruleId":"90","severity":1,"message":"99","line":45,"column":6,"nodeType":"92","endLine":45,"endColumn":8,"suggestions":"100"},{"ruleId":"85","severity":1,"message":"101","line":5,"column":10,"nodeType":"87","messageId":"88","endLine":5,"endColumn":21},{"ruleId":"90","severity":1,"message":"102","line":42,"column":6,"nodeType":"92","endLine":42,"endColumn":16,"suggestions":"103"},{"ruleId":"90","severity":1,"message":"104","line":51,"column":6,"nodeType":"92","endLine":51,"endColumn":13,"suggestions":"105"},{"ruleId":"85","severity":1,"message":"106","line":5,"column":9,"nodeType":"87","messageId":"88","endLine":5,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":14,"column":5,"nodeType":"109","messageId":"110","endLine":14,"endColumn":35,"fix":"111"},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPlaylist'. Either include it or remove the dependency array.","ArrayExpression",["112"],"'isAuthenticated' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'axios' is defined but never used.","'setFileInputChange' is assigned a value but never used.","'setgroovelistCount' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCoverPlusTitle' and 'getTrackList'. Either include them or remove the dependency array.",["113"],"'useAuthUser' is defined but never used.","React Hook useEffect has missing dependencies: 'email' and 'getTrackList'. Either include them or remove the dependency array.",["114"],"React Hook useEffect has a missing dependency: 'body'. Either include it or remove the dependency array.",["115"],"'navigate' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"116","text":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},[456,456]," rel=\"noreferrer\"","Update the dependencies array to be: [genre, getPlaylist]",{"range":"126","text":"127"},"Update the dependencies array to be: [getCoverPlusTitle, getTrackList]",{"range":"128","text":"129"},"Update the dependencies array to be: [email, getTrackList, songList]",{"range":"130","text":"131"},"Update the dependencies array to be: [body, songs]",{"range":"132","text":"133"},[1089,1096],"[genre, getPlaylist]",[1199,1201],"[getCoverPlusTitle, getTrackList]",[1031,1041],"[email, getTrackList, songList]",[1238,1245],"[body, songs]"]